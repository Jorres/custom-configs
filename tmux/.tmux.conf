# change tmux command prefix from C-b
set -g prefix C-a
# remove original prefix binding
unbind C-b
# allow prefix to be sent when typed twice
bind C-a send-prefix

# set the delay between prefix and commands
set -s escape-time 1

# set default numeration of windows within a session from 1, not from 0
# this way numeration in the lower bar corresponds to keys on the keyboard
set -g base-index 1
# set pane numeration from 1 as well to have consistency
# setw because setWindow, this is a window-level setting
setw -g pane-base-index 1

# shortcut to reload config. Prefix is implicit before every binding, 
# because otherwise this key will just go through the tmux to the program underneath!
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# it is possible with bind -n to make a shortcut that does not require a prefix, 
# but you will be unable to send this combination to an underlying program anymore.

# scrollback buffer n lines
set -g history-limit 5000
  
set -g renumber-windows on    # renumber windows when a window is closed

# === <Panes> ===
# easier splitting with '|' and '-'
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# easier pane movement with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# easier resizing with HJKL
# this -r flag allows for pressing the prefix only once 
# and then hitting the next command within some time limit
# as many times as you need!
bind -r H resize-pane -L 3
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 3

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# === </Panes> ===

# the said time limit, default 500ms, changing to 1 second:
set -g repeat-time 1000

# moving left and right through windows with << h and >> l
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# explicitly disable mouse support (resizing windows, selecting panes, scrolling...)
# set -g mouse off

# === <Appearance> ===
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

# Set status-line font and background (tightly coupled with vim gruvbox theme)
# use this command to look through all colors your terminal can display:
# for i in {0..255} ; do 
#     printf "\x1b[38;5;${i}m${i} " 
# done
set -g status-style fg=colour116,bold,bg=#2B2E38
setw -g window-status-style fg=colour116,bold,bg=colour236
setw -g window-status-current-style fg=colour228,bg=colour236
setw -g window-status-format "#I:#W"
setw -g window-status-current-format "#I:#W"

# border colours
set -g pane-border-style fg=default
set -g pane-active-border-style bg=default,fg=colour116

# Status line
bind-key s set status

set -g status-position top 
set -g message-style fg=white,bold,bg=black
set -g status-left-length 40
set -g status-left "   #S"

set -g status-justify centre

set -g status-right "#{pomodoro_status}      %R    #(~/battery)  #(xkb-switch -p)"
set -g status-interval 1

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity off

# enable vi navigation in scroll mode
setw -g mode-keys vi

set -g default-shell /bin/zsh

# Makes vim process FocusGained, FocusLost
set -g focus-events on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# Tmux plugin management
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# This plugin makes tmux yank into system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'CrispyConductor/tmux-copy-toolkit'
set -g @copytk-copy-command "copyq copy -"

# set -g @plugin 'tmux-plugins/tmux-fpp'

set -g @plugin 'olimorris/tmux-pomodoro-plus'       # Options
set -g @pomodoro_start 'p'                          # Start a Pomodoro with tmux-prefix + p
set -g @pomodoro_cancel 'P'                         # Cancel a Pomodoro with tmux-prefix key + P

set -g @pomodoro_mins 25                            # The duration of the pomodoro
set -g @pomodoro_break_mins 5                       # The duration of the break after the pomodoro

set -g @pomodoro_on " #[fg=$text_red] "           # The formatted output when the pomodoro is running
set -g @pomodoro_complete " #[fg=$text_green] "   # The formatted output when the break is running

run '~/.tmux/plugins/tpm/tpm'
