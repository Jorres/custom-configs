% kubernetes

# Attach to a pod with bash
kubectl exec -it <pod_name> -n <namespace> -- bash 
$ pod_name: kubectl get pods -A | tail -n+2 --- --column 1 --column 2 
$ namespace: kubectl get pods -A | grep $pod_name | a)wk '{print $1}'

# Port forward to pod
kubectl port-forward <pod_name> -n <namespace>  <local>:<in_pod>
$ pod_name: kubectl get pods -A | tail -n+2 --- --column 1 --column 2
$ namespace: kubectl get pods -A | grep $pod_name | awk '{print $1}'

# Change switch kubectl context
kubectl config use-context <context>
$ context: kubectl config view --template='{{ range .contexts }}{{ printf "%s\n" .name }}{{ end }}'

# kubectl get resources by labels
kubectl get <resource> -l <label>=<value>

# kubectl create default blueprint for resource
kubectl create <resource> <name> --dry-run=client -o yaml > <name>.yaml

# kubectl view current context and namespace
kubectl config get-contexts | head -n 1 && kubectl config get-contexts | grep "*"

# kubectl display nodes by label
kubectl get nodes --selector=<label_selector>
