snippet gitlab-ci-sample
image: node:16-slim

# Allows to cache npm dependencies between builds, more detail:
# https://docs.gitlab.com/ee/ci/caching/#cache-nodejs-dependencies
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .npm/

stages:
  - test
  - build_kuber
  - deploy_kuber

job_test:
  stage: test
  script:
    - npm ci --cache .npm --prefer-offline
    - npm test

job_build:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "main"'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - mkdir -p /kaniko/.docker
    # This should break! approximately in June 2022. We'll need a Yandex OAuth token.
    - echo "{\"auths\":{\"cr.yandex/crphrs8s5ki6n5cp1cfb\":{\"username\":\"oauth\",\"password\":\"AQAEA7qjI3KzAATuwVYL4X6-qUwap6bvaDI_LrA\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination cr.yandex/crphrs8s5ki6n5cp1cfb/yoda-test:$CI_COMMIT_SHORT_SHA

job_deploy:
  image: kubesphere/kubectl:v1.19.1
  stage: deploy
  script:
    # 'KUBE_URL' and 'KUBE_TOKEN' are set as Gitlab repository variables that has `kubectl`
    # - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
    # - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    # - kubectl config set-context default --cluster=k8s --user=admin
    # - kubectl config use-context default
    # - sed -i "s/__VERSION__/$CI_COMMIT_SHORT_SHA/" k8s/yoda-prod.yaml
    # # autodeploy on testing only. We still want manual production for now.
    # - kubectl apply -f k8s/k8s-issuers.yaml
    # - kubectl apply -f k8s/yoda-prod.yaml
endsnippet
